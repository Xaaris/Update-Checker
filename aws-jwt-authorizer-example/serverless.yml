service: product-checker

provider:
  name: aws
  region: eu-central-1
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  environment:
    USER_TABLE: productCheckerUsersTable
    PRODUCT_TABLE: productCheckerProductTable
    SUBSCRIPTION_TABLE: productCheckerSubscriptionTable
  httpApi:
    authorizers:
      serviceAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl: https://dev-hw-jobs-integration.eu.auth0.com/
        audience: productchecker
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.USER_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.PRODUCT_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.SUBSCRIPTION_TABLE}"
functions:
  getProfileInfo:
    handler: profile.get
    events:
      - httpApi:
            method: GET
            path: /api/profile
            authorizer: serviceAuthorizer
  createProfileInfo:
    handler: profile.post
    events:
      - httpApi:
            method: POST
            path: /api/profile
            authorizer: serviceAuthorizer
  listProducts:
    handler: products.get
    events:
      - httpApi:
          method: GET
          path: /api/products
          authorizer: serviceAuthorizer
  subscribe:
    handler: subscriptions.post
    events:
      - httpApi:
          method: POST
          path: /api/subscribe
          authorizer: serviceAuthorizer
  registerProfile:
    handler: register.post
    events:
      - httpApi:
          method: POST
          path: /api/register
          authorizer: serviceAuthorizer

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USER_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    productTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PRODUCT_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    subscriptionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.SUBSCRIPTION_TABLE}
        AttributeDefinitions:
          - AttributeName: productId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: productId
            KeyType: HASH
          - AttributeName: userId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
