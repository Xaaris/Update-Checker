org: oliverbehncke
app: http-api-node-auth0-simple-app
service: http-api-node-auth0-simple

provider:
  name: aws
  region: eu-central-1
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  environment:
    USER_TABLE: productCheckerUsersTable
  httpApi:
    authorizers:
      serviceAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl: https://dev-hw-jobs-integration.eu.auth0.com/
        audience: productchecker
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.USER_TABLE}"
functions:
  getProfileInfo:
    handler: profile.get
    events:
      - httpApi:
            method: GET
            path: /api/profile
            authorizer: serviceAuthorizer
  createProfileInfo:
    handler: profile.post
    events:
      - httpApi:
            method: POST
            path: /api/profile
            authorizer: serviceAuthorizer
  registerProfile:
    handler: register.post
    events:
      - httpApi:
          method: POST
          path: /api/register
          authorizer: serviceAuthorizer

resources: # CloudFormation template syntax from here on.
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USER_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
